<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Ai绘画-刻晴</title>
      <link href="/2023/05/24/wallpaper3/"/>
      <url>/2023/05/24/wallpaper3/</url>
      
        <content type="html"><![CDATA[<h1 id="Ai绘画分享（原神-刻晴）"><a href="#Ai绘画分享（原神-刻晴）" class="headerlink" title="Ai绘画分享（原神-刻晴）"></a>Ai绘画分享（原神-刻晴）</h1><p>模型：Counterfeit-V3.0</p><p>Vae：Counterfeit-V2.5</p><p>lora：keqing_lion_optimizer_dim64_loraModel_5e-3noise_token1_4-3-2023</p><p><img src="https://bu.dusays.com/2023/05/24/646e009ceed53.png"></p><p><img src="https://bu.dusays.com/2023/05/24/646e009d2d957.png"></p><p><img src="https://bu.dusays.com/2023/05/24/646e009d533bf.png"></p><p><img src="https://bu.dusays.com/2023/05/24/646e009d7f263.png"></p><p><img src="https://bu.dusays.com/2023/05/24/646e009d5df09.png"></p><p><img src="https://bu.dusays.com/2023/05/24/646e009d8315a.png"></p><p><img src="https://bu.dusays.com/2023/05/24/646e009d8aaec.png"></p><p><img src="https://bu.dusays.com/2023/05/24/646e009d89f48.png"></p><p><img src="https://bu.dusays.com/2023/05/24/646e009d7e32d.png"></p><p><img src="https://bu.dusays.com/2023/05/24/646e009d7f64c.png"></p><p><img src="https://bu.dusays.com/2023/05/24/646e010387e5f.png"></p><p><img src="https://bu.dusays.com/2023/05/24/646e06d624055.png"></p>]]></content>
      
      
      <categories>
          
          <category> 壁纸 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ai </tag>
            
            <tag> 壁纸 </tag>
            
            <tag> 原神 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ai绘画-甘雨</title>
      <link href="/2023/05/24/wallpaper2/"/>
      <url>/2023/05/24/wallpaper2/</url>
      
        <content type="html"><![CDATA[<h1 id="Ai绘画分享（原神-甘雨）"><a href="#Ai绘画分享（原神-甘雨）" class="headerlink" title="Ai绘画分享（原神-甘雨）"></a>Ai绘画分享（原神-甘雨）</h1><p>模型：Counterfeit-V3.0</p><p>Vae：Counterfeit-V2.5</p><p>lora：ganyu2</p><p><img src="https://bu.dusays.com/2023/05/24/646def7349e24.png"></p><p><img src="https://bu.dusays.com/2023/05/24/646def73487c9.png"></p><p><img src="https://bu.dusays.com/2023/05/24/646def734e4a1.png"></p><p><img src="https://bu.dusays.com/2023/05/24/646def7347682.png"></p><p><img src="https://bu.dusays.com/2023/05/24/646def734879f.png"></p><p><img src="https://bu.dusays.com/2023/05/24/646def7351e3a.png"></p><p><img src="https://bu.dusays.com/2023/05/25/646f0dad06532.png" alt="00053-2926857989-((masterpiece, best quality)), close-up, straight on, face focus,((1 girl)), {long hair}, ((small breasts)), standing, hair orna.png"><br><img src="https://bu.dusays.com/2023/05/25/646f0dad7fc0d.png" alt="00088-776441060-(1girl),(solo), ((high resolution)),((Clear and sharp)),(masterpiece_1.5), outdoors ,only 1girl,look at the camera,sky,finely de.png"><br><img src="https://bu.dusays.com/2023/05/25/646f0dad73a7a.png" alt="00091-776441063-(1girl),(solo), ((high resolution)),((Clear and sharp)),(masterpiece_1.5), outdoors ,only 1girl,look at the camera,sky,finely de.png"><br><img src="https://bu.dusays.com/2023/05/25/646f0dad848a5.png" alt="00092-776441064-(1girl),(solo), ((high resolution)),((Clear and sharp)),(masterpiece_1.5), outdoors ,only 1girl,look at the camera,sky,finely de.png"><br><img src="https://bu.dusays.com/2023/05/25/646f0dad9f312.png" alt="00077-1374725258-((masterpiece, best quality)), close-up, straight on, face focus,((1 girl)), {long hair}, ((small breasts)), standing, hair orna.png"><br><img src="https://bu.dusays.com/2023/05/25/646f0dad7ca1e.png" alt="00090-776441062-(1girl),(solo), ((high resolution)),((Clear and sharp)),(masterpiece_1.5), outdoors ,only 1girl,look at the camera,sky,finely de.png"><br><img src="https://bu.dusays.com/2023/05/25/646f0dad7fd07.png" alt="00097-776441069-(1girl),(solo), ((high resolution)),((Clear and sharp)),(masterpiece_1.5), outdoors ,only 1girl,look at the camera,sky,finely de.png"><br><img src="https://bu.dusays.com/2023/05/25/646f0dad747d5.png" alt="00100-776441072-(1girl),(solo), ((high resolution)),((Clear and sharp)),(masterpiece_1.5), outdoors ,only 1girl,look at the camera,sky,finely de.png"><br><img src="https://bu.dusays.com/2023/05/25/646f0dad7e2e7.png" alt="00085-776441057-(1girl),(solo), ((high resolution)),((Clear and sharp)),(masterpiece_1.5), outdoors ,only 1girl,look at the camera,sky,finely de.png"><br><img src="https://bu.dusays.com/2023/05/25/646f0dad88e99.png" alt="00089-776441061-(1girl),(solo), ((high resolution)),((Clear and sharp)),(masterpiece_1.5), outdoors ,only 1girl,look at the camera,sky,finely de.png"><br><img src="https://bu.dusays.com/2023/05/25/646f0daee5b07.png" alt="00071-2934416068-((masterpiece, best quality)), close-up, straight on, face focus,((1 girl)), {long hair}, ((small breasts)), standing, hair orna.png"><br><img src="https://bu.dusays.com/2023/05/25/646f0dae969b2.png" alt="00069-2298563128-((masterpiece, best quality)), close-up, straight on, face focus,((1 girl)), {long hair}, ((medium breasts )), standing, hair or.png"></p>]]></content>
      
      
      <categories>
          
          <category> 壁纸 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ai </tag>
            
            <tag> 壁纸 </tag>
            
            <tag> 原神 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>05-Java基础知识-数组</title>
      <link href="/2023/05/17/java5/"/>
      <url>/2023/05/17/java5/</url>
      
        <content type="html"><![CDATA[<h1 id="Java数组介绍"><a href="#Java数组介绍" class="headerlink" title="Java数组介绍"></a>Java数组介绍</h1><p>数组是Java中最常用的数据结构之一，用于存储相同类型的多个元素。数组在Java中具有以下特点：</p><h2 id="1-声明和初始化数组"><a href="#1-声明和初始化数组" class="headerlink" title="1. 声明和初始化数组"></a>1. 声明和初始化数组</h2><p>在Java中，声明数组需要指定数组类型和数组名称，如下所示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>[] numbers; <span class="comment">//声明一个int类型的数组</span></span><br><span class="line">String[] names; <span class="comment">//声明一个String类型的数组</span></span><br></pre></td></tr></table></figure><p>数组的初始化可以通过两种方式进行：</p><h3 id="静态初始化"><a href="#静态初始化" class="headerlink" title="静态初始化"></a>静态初始化</h3><p>静态初始化指在声明数组的同时为数组元素赋初值，使用花括号 <code>&#123;&#125;</code> 来指定初始值，如下所示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>[] numbers = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;; <span class="comment">//初始化一个包含5个元素的int数组</span></span><br><span class="line">String[] names = &#123;<span class="string">&quot;Alice&quot;</span>, <span class="string">&quot;Bob&quot;</span>, <span class="string">&quot;Charlie&quot;</span>&#125;; <span class="comment">//初始化一个包含3个元素的String数组</span></span><br></pre></td></tr></table></figure><h3 id="动态初始化"><a href="#动态初始化" class="headerlink" title="动态初始化"></a>动态初始化</h3><p>动态初始化指先声明数组，然后通过 <code>new</code> 关键字为数组分配内存空间，再为数组元素赋值，如下所示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>[] numbers = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">5</span>]; <span class="comment">//声明一个包含5个元素的int数组</span></span><br><span class="line">numbers[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">numbers[<span class="number">1</span>] = <span class="number">2</span>;</span><br><span class="line">numbers[<span class="number">2</span>] = <span class="number">3</span>;</span><br><span class="line">numbers[<span class="number">3</span>] = <span class="number">4</span>;</span><br><span class="line">numbers[<span class="number">4</span>] = <span class="number">5</span>;</span><br></pre></td></tr></table></figure><h2 id="2-访问数组元素"><a href="#2-访问数组元素" class="headerlink" title="2. 访问数组元素"></a>2. 访问数组元素</h2><p>数组元素可以通过索引来访问，索引从0开始，如下所示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">firstNumber</span> <span class="operator">=</span> numbers[<span class="number">0</span>]; <span class="comment">//访问第一个元素</span></span><br><span class="line"><span class="type">String</span> <span class="variable">firstName</span> <span class="operator">=</span> names[<span class="number">0</span>]; <span class="comment">//访问第一个元素</span></span><br></pre></td></tr></table></figure><h2 id="3-数组长度"><a href="#3-数组长度" class="headerlink" title="3. 数组长度"></a>3. 数组长度</h2><p>可以使用 <code>length</code> 属性获取数组的长度，表示数组中元素的个数，如下所示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">length</span> <span class="operator">=</span> numbers.length; <span class="comment">//获取数组的长度</span></span><br></pre></td></tr></table></figure><h2 id="4-遍历数组"><a href="#4-遍历数组" class="headerlink" title="4. 遍历数组"></a>4. 遍历数组</h2><p>遍历数组可以使用循环结构，如 <code>for</code> 循环，来访问数组的每个元素，如下所示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; numbers.length; i++) &#123;</span><br><span class="line">    System.out.println(numbers[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-多维数组"><a href="#5-多维数组" class="headerlink" title="5. 多维数组"></a>5. 多维数组</h2><p>Java还支持多维数组，可以用来存储多个元素的表格或矩阵。多维数组可以通过在声明时指定多个维度来创建，如下所示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>[][] matrix = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">3</span>][<span class="number">3</span>]; <span class="comment">//声明一个3x3的二维数组</span></span><br></pre></td></tr></table></figure><p>以上是对Java数组的简单介绍，数组在Java中具有重要的作用，可以方便地存储和操作大量相同类型的数据。通过掌握数组的使用方法，可以更好地处理和管理数据。</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>04-Java基础知识-运算符</title>
      <link href="/2023/05/17/java4/"/>
      <url>/2023/05/17/java4/</url>
      
        <content type="html"><![CDATA[<h1 id="Java运算符简介"><a href="#Java运算符简介" class="headerlink" title="Java运算符简介"></a>Java运算符简介</h1><p>在Java编程语言中，运算符用于执行各种操作，包括算术、赋值、比较和逻辑等。了解和正确使用这些运算符是编写高效和功能强大的Java程序的基础。</p><h2 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h2><p>算术运算符用于执行基本的数学运算，例如加法、减法、乘法和除法。以下是常用的算术运算符：</p><ul><li>加法运算符（+）：用于将两个值相加。</li><li>减法运算符（-）：用于将一个值减去另一个值。</li><li>乘法运算符（*）：用于将两个值相乘。</li><li>除法运算符（&#x2F;）：用于将一个值除以另一个值。</li><li>取余运算符（%）：用于计算两个值相除的余数。</li></ul><h2 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h2><p>赋值运算符用于将一个值赋给一个变量。常见的赋值运算符是等号（&#x3D;），它将右边的值赋给左边的变量。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> <span class="number">10</span>; <span class="comment">// 将值10赋给变量x</span></span><br></pre></td></tr></table></figure><p>除了等号之外，还有一些复合赋值运算符，例如加等（+&#x3D;）、减等（-&#x3D;）、乘等（*&#x3D;）和除等（&#x2F;&#x3D;）。这些复合赋值运算符将右边的值与左边的变量进行运算，并将结果赋给左边的变量。</p><h2 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h2><p>比较运算符用于比较两个值之间的关系，并返回一个布尔值（true或false）。以下是常用的比较运算符：</p><ul><li>相等运算符（&#x3D;&#x3D;）：用于检查两个值是否相等。</li><li>不等运算符（!&#x3D;）：用于检查两个值是否不相等。</li><li>大于运算符（&gt;）：用于检查左边的值是否大于右边的值。</li><li>小于运算符（&lt;）：用于检查左边的值是否小于右边的值。</li><li>大于等于运算符（&gt;&#x3D;）：用于检查左边的值是否大于或等于右边的值。</li><li>小于等于运算符（&lt;&#x3D;）：用于检查左边的值是否小于或等于右边的值。</li></ul><h2 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h2><p>逻辑运算符用于执行逻辑运算，例如逻辑与（&amp;&amp;）、逻辑或（||）和逻辑非（!）。这些运算符通常用于条件语句和循环结构中。</p><ul><li>逻辑与（&amp;&amp;）：当两个条件都为真时，返回真。</li><li>逻辑或（||）：当至少有一个条件为真时，返回真。</li><li>逻辑非（!）：对条件的结果进行取反。</li></ul><h2 id="其他运算符"><a href="#其他运算符" class="headerlink" title="其他运算符"></a>其他运算符</h2><p>除了上述提到的运算符外，还有一些其他常见的运算符，包括：</p><ul><li>自增运算符（++）：用于将变量的值增加1。</li><li>自减运算符（–）：用于将变量的值减少1。</li><li>条件运算符（三元运算符）（? :）：用于根据条件选择不同的值。</li><li>位运算符：用于对数据的位进行操作，例如按位与（&amp;）、按位或（|）、按位异或（^）等。</li><li>移位运算符：用于对数据的位进行移动操作，例如左移（&lt;&lt;）、右移（&gt;&gt;）等。</li><li>instanceof运算符：用于检查对象是否是指定类型的实例。</li><li>强制类型转换运算符：用于将一个数据类型转换为另一个数据类型。</li></ul><p>了解和掌握这些运算符的使用方法和规则，能够帮助我们进行复杂的计算和逻辑操作，提高程序的灵活性和效率。</p><p>以上是Java中一些常见的运算符的简要介绍，通过灵活运用这些运算符，我们可以编写出功能丰富且高效的Java程序。在实际编程中，根据具体需求和场景选择合适的运算符是非常重要的。</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>03-Java基础知识-数据类型</title>
      <link href="/2023/05/12/java3/"/>
      <url>/2023/05/12/java3/</url>
      
        <content type="html"><![CDATA[<h1 id="Java数据类型"><a href="#Java数据类型" class="headerlink" title="Java数据类型"></a>Java数据类型</h1><p>Java是一门强类型语言，变量必须先声明并指定数据类型，然后才能进行使用。Java提供了八种基本数据类型和引用类型，本文将简单介绍Java的数据类型。</p><h2 id="基本数据类型"><a href="#基本数据类型" class="headerlink" title="基本数据类型"></a>基本数据类型</h2><p>Java的八种基本数据类型分为四类，分别是整型、浮点型、字符型和布尔型。</p><h3 id="整型"><a href="#整型" class="headerlink" title="整型"></a>整型</h3><p>整型包括四种类型，分别是<code>byte</code>、<code>short</code>、<code>int</code>和<code>long</code>。它们分别占用1、2、4和8个字节，表示的范围也不同，如下表所示：</p><table><thead><tr><th>数据类型</th><th>占用字节数</th><th>表示范围</th></tr></thead><tbody><tr><td>byte</td><td>1</td><td>-128 ~ 127</td></tr><tr><td>short</td><td>2</td><td>-32768 ~ 32767</td></tr><tr><td>int</td><td>4</td><td>-2147483648 ~ 2147483647</td></tr><tr><td>long</td><td>8</td><td>-9223372036854775808 ~ 9223372036854775807</td></tr></tbody></table><h3 id="浮点型"><a href="#浮点型" class="headerlink" title="浮点型"></a>浮点型</h3><p>浮点型包括两种类型，分别是<code>float</code>和<code>double</code>。它们分别占用4和8个字节，表示的范围也不同，如下表所示：</p><table><thead><tr><th>数据类型</th><th>占用字节数</th><th>表示范围</th></tr></thead><tbody><tr><td>float</td><td>4</td><td>1.4E-45 ~ 3.4028235E+38</td></tr><tr><td>double</td><td>8</td><td>4.9E-324 ~ 1.797693134E+308</td></tr></tbody></table><h3 id="字符型"><a href="#字符型" class="headerlink" title="字符型"></a>字符型</h3><p>字符型只有一种类型，即<code>char</code>。它占用2个字节，可以表示所有Unicode字符，表示范围为0 ~ 65535。</p><h3 id="布尔型"><a href="#布尔型" class="headerlink" title="布尔型"></a>布尔型</h3><p>布尔型只有一种类型，即<code>boolean</code>。它只有两个取值，分别为<code>true</code>和<code>false</code>，占用1个字节。</p><h2 id="引用类型"><a href="#引用类型" class="headerlink" title="引用类型"></a>引用类型</h2><p>Java的引用类型指除了基本数据类型之外的类型，包括类、接口、数组等。引用类型变量存储的是对象的地址，而不是对象本身。引用类型变量的默认值为<code>null</code>。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>本文简单介绍了Java的八种基本数据类型和引用类型。在实际开发中，我们需要根据需求选择适当的数据类型，以免浪费内存或出现数据精度等问题。</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>01-Java基础知识-简介</title>
      <link href="/2023/05/12/java1/"/>
      <url>/2023/05/12/java1/</url>
      
        <content type="html"><![CDATA[<h1 id="Java简介"><a href="#Java简介" class="headerlink" title="Java简介"></a>Java简介</h1><p>Java是一种面向对象的编程语言，由Sun Microsystems在1995年推出。Java的特点是跨平台、简单易学、安全可靠、支持多线程、面向对象等，这些特点使得Java成为了全球最受欢迎的编程语言之一。</p><h2 id="跨平台"><a href="#跨平台" class="headerlink" title="跨平台"></a>跨平台</h2><p>Java的跨平台性是由其虚拟机（JVM）实现的。Java程序在编译之后会生成一种特殊的字节码格式，这种字节码可以在任何能够运行Java虚拟机的平台上执行。这意味着，一次编译可以在不同的操作系统和计算机上运行，避免了因为操作系统或硬件的差异而导致的不兼容性问题。</p><h2 id="简单易学"><a href="#简单易学" class="headerlink" title="简单易学"></a>简单易学</h2><p>Java的语法与C++和C语言比较相似，但是相对来说更加简单。Java取消了一些C++中比较复杂的特性，如指针、多继承等。同时，Java还提供了很多高级特性，如自动内存管理、垃圾回收、异常处理等，这些特性都大大减轻了开发人员的工作量，降低了出错的概率。</p><h2 id="安全可靠"><a href="#安全可靠" class="headerlink" title="安全可靠"></a>安全可靠</h2><p>Java提供了很多安全机制，如安全沙箱、类加载器等，这些机制都可以保证Java程序的安全性。Java也提供了一些强制类型检查、空指针检查等功能，这些功能也有助于减少程序中的错误。</p><h2 id="多线程"><a href="#多线程" class="headerlink" title="多线程"></a>多线程</h2><p>Java提供了丰富的多线程机制，允许开发人员使用多线程来充分利用多核CPU，提高程序的执行效率。Java的多线程机制包括线程类、线程同步、线程池等。</p><h2 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h2><p>Java是一种面向对象的编程语言，所有的Java程序都是由对象组成的。Java的面向对象机制包括类、对象、封装、继承、多态等。面向对象的编程思想能够提高程序的可维护性、可扩展性、可重用性。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>Java作为一种跨平台、简单易学、安全可靠、支持多线程、面向对象等的编程语言，应用广泛。Java在各种领域中都有广泛的应用，如Web开发、移动应用开发、桌面应用开发、大数据处理等。</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>02-Java基础知识-变量</title>
      <link href="/2023/05/12/java2/"/>
      <url>/2023/05/12/java2/</url>
      
        <content type="html"><![CDATA[<h1 id="Java中的变量"><a href="#Java中的变量" class="headerlink" title="Java中的变量"></a>Java中的变量</h1><p>在Java编程中，变量是存储数据的最基本的单元。变量可以保存各种类型的数据，如整数、浮点数、字符、字符串等等。本文将介绍Java中的变量类型、命名规则和作用域等方面的内容。</p><h2 id="变量类型"><a href="#变量类型" class="headerlink" title="变量类型"></a>变量类型</h2><p>Java中的变量可以分为以下几种类型：</p><h3 id="基本类型"><a href="#基本类型" class="headerlink" title="基本类型"></a>基本类型</h3><p>Java中的基本类型有8种，分别为：</p><ul><li>byte：1字节，范围为-128 ~ 127。</li><li>short：2字节，范围为-32768 ~ 32767。</li><li>int：4字节，范围为-2147483648 ~ 2147483647。</li><li>long：8字节，范围为-9223372036854775808 ~ 9223372036854775807。</li><li>float：4字节，范围为1.4E-45 ~ 3.4028235E38。</li><li>double：8字节，范围为4.9E-324 ~ 1.7976931348623157E308。</li><li>char：2字节，范围为0 ~ 65535。</li><li>boolean：1位，只有两个值：true和false。</li></ul><h3 id="引用类型"><a href="#引用类型" class="headerlink" title="引用类型"></a>引用类型</h3><p>Java中的引用类型指的是对象，这些对象在堆中分配，变量在栈中存储一个引用指向堆中的对象。Java中的引用类型有类、接口、数组、枚举等等。</p><h2 id="命名规则"><a href="#命名规则" class="headerlink" title="命名规则"></a>命名规则</h2><p>Java中的变量名必须满足以下规则：</p><ul><li>变量名必须以字母、下划线（_）或美元符号（$）开始。</li><li>变量名不能以数字开头。</li><li>变量名只能包含字母、数字、下划线或美元符号。</li><li>变量名区分大小写。</li><li>变量名不能是Java关键字和保留字。</li></ul><h2 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h2><p>Java中的变量有不同的作用域。变量的作用域指的是变量在程序中可见的范围。在Java中，变量的作用域可以分为以下几种：</p><h3 id="类变量（静态变量）"><a href="#类变量（静态变量）" class="headerlink" title="类变量（静态变量）"></a>类变量（静态变量）</h3><p>类变量是定义在类中的静态变量。这些变量被所有该类的对象共享。在类的定义中使用static关键字定义。</p><h3 id="实例变量"><a href="#实例变量" class="headerlink" title="实例变量"></a>实例变量</h3><p>实例变量是定义在类中，但在方法、语句块或构造函数之外的变量。每个对象都有一份实例变量的副本。</p><h3 id="局部变量"><a href="#局部变量" class="headerlink" title="局部变量"></a>局部变量</h3><p>局部变量是定义在方法、语句块或构造函数中的变量。这些变量只在方法、语句块或构造函数中有效。</p><h2 id="变量的声明和初始化"><a href="#变量的声明和初始化" class="headerlink" title="变量的声明和初始化"></a>变量的声明和初始化</h2><p>Java中的变量需要先声明后使用。声明变量时需要指定变量的类型，变量名以及作用域。变量的初始化指的是为变量赋初值。</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>教程 使用hexo搭建属于自己的blog</title>
      <link href="/2023/05/10/blogcourse/"/>
      <url>/2023/05/10/blogcourse/</url>
      
        <content type="html"><![CDATA[<h3 id="教程比较简单，大概半小时就可以搭建完成雏形，且不需要自己的服务器就可以部署。"><a href="#教程比较简单，大概半小时就可以搭建完成雏形，且不需要自己的服务器就可以部署。" class="headerlink" title="教程比较简单，大概半小时就可以搭建完成雏形，且不需要自己的服务器就可以部署。"></a>教程比较简单，大概半小时就可以搭建完成雏形，且不需要自己的服务器就可以部署。</h3><h3 id="准备工作："><a href="#准备工作：" class="headerlink" title="准备工作："></a>准备工作：</h3><p>注册一个自己的github账号：<a href="https://github.com/">github官网</a>。进不去的话应该要用魔法。</p><p>注册登入github</p><p>点击Create a new repository新建一个仓库</p><p>repository name输入：你的用户名.github.io（注意不要随便给仓库取名，否则会导致后续配置很麻烦）</p><p>勾选Public</p><p>勾选 Add a README file</p><p>拉到下面点击create repository创建 </p><h3 id="开始阶段："><a href="#开始阶段：" class="headerlink" title="开始阶段："></a>开始阶段：</h3><h5 id="下载node-js和git："><a href="#下载node-js和git：" class="headerlink" title="下载node.js和git："></a>下载node.js和git：</h5><p><a href="https://node.jsnodejs.org/en/">https://Node.jsnodejs.org/en/</a></p><p><a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a></p><p>安装下载教程均可在网上找到，这里不再提供。</p><h5 id="下载hexo"><a href="#下载hexo" class="headerlink" title="下载hexo:"></a>下载hexo:</h5><p>打开cmd输入下列命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure><h5 id="生成SSH-Keys："><a href="#生成SSH-Keys：" class="headerlink" title="生成SSH Keys："></a>生成SSH Keys：</h5><p>随便找个文件夹右键（win11需要右键后点显示更多选项），然后选git bush  here，输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;你的邮件地址&quot; </span><br></pre></td></tr></table></figure><p>然后连续按四次回车</p><p>然后用记事本打开C:&#x2F;Users&#x2F;用户名&#x2F;.ssh下的id_rsa.pub，复制里面的代码</p><p>打开github，右上角头像-&gt;setting-&gt;SSH and GPG keys-&gt;新建SSH keys，名称随意，在下面粘贴代码</p><p>随便找个文件夹右键（win11需要右键后点显示更多选项），然后选git bush  here，输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>回车，然后再输入yes。</p><h4 id="本地创建博客："><a href="#本地创建博客：" class="headerlink" title="本地创建博客："></a>本地创建博客：</h4><p>找一个地方新建一个文件夹，用来放你的博客文件。在文件夹里git bush  here，输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>然后管理员运行cmd，用cmd进入你刚才的博客文件夹</p><p>比如你在E盘创建了一个blog文件夹就在cmd中输入</p><p>E：  回车</p><p>cd blog</p><p>就进去了</p><p>然后输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo install</span><br></pre></td></tr></table></figure><p>等下载完成后再回到Git bash</p><p>依次输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>现在就可以复制生成的链接进入浏览器就可以看到博客了</p><p>然后按ctrl+c停止运行</p><h4 id="上传："><a href="#上传：" class="headerlink" title="上传："></a>上传：</h4><p>去github之前生成的仓库页面点code，复制https的链接</p><p>进入之前的Blog文件夹，用记事本打开_config.yml</p><p>拉到最下面将deploy替换为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:  </span><br><span class="line">  type: git</span><br><span class="line">  repository: 你复制的https的链接</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure><h5 id="注意：每行前面都有两个空格不要删，每个冒号后面都有个空格也不要删！不然就会报错。如果运行出错网上找个yml格式文件语法在线检测的网站查一查哪里有问题"><a href="#注意：每行前面都有两个空格不要删，每个冒号后面都有个空格也不要删！不然就会报错。如果运行出错网上找个yml格式文件语法在线检测的网站查一查哪里有问题" class="headerlink" title="注意：每行前面都有两个空格不要删，每个冒号后面都有个空格也不要删！不然就会报错。如果运行出错网上找个yml格式文件语法在线检测的网站查一查哪里有问题"></a>注意：每行前面都有两个空格不要删，每个冒号后面都有个空格也不要删！不然就会报错。如果运行出错网上找个yml格式文件语法在线检测的网站查一查哪里有问题</h5><p>保存退出</p><p>和之前一样管理员运行cmd然后进入Blog文件夹</p><p>输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>然后在Blog文件夹右键打开git bash，依次输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>然后在跳出来的窗口内进行登录</p><p>接下来我们就成功把本地内容上传到github了</p><p>上传成功后就可以在网上查看自己的博客了</p><p>网址是我们之前设的仓库名：你的用户名.github.io </p><h4 id="文章更新："><a href="#文章更新：" class="headerlink" title="文章更新："></a>文章更新：</h4><p>在 你的博客文件夹&#x2F;source&#x2F;_post文件夹下写md文件，格式可以参考默认就有的一个hello-world.md。</p><p>然后 在博客文件夹根目录git bash here</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo g </span><br><span class="line"></span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>上传就行了</p><h4 id="主题："><a href="#主题：" class="headerlink" title="主题："></a>主题：</h4><p>默认的是landscape主题 可以在<a href="https://hexo.io/themes/">Hexo官网</a>上找一些其他好看的主题。</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>blog更新工作进展(2023/5/10)</title>
      <link href="/2023/05/10/blog4/"/>
      <url>/2023/05/10/blog4/</url>
      
        <content type="html"><![CDATA[<p>本篇博客记录一下本站搭建工作以及后续更新。</p><h2 id="更新记录："><a href="#更新记录：" class="headerlink" title="更新记录："></a>更新记录：</h2><h3 id="2023-x2F-5-x2F-10："><a href="#2023-x2F-5-x2F-10：" class="headerlink" title="2023&#x2F;5&#x2F;10："></a>2023&#x2F;5&#x2F;10：</h3><p>1.增加了分类和tag（标签）页面。</p><p>2.更改了首页图片，换了张小的，加载更快一点。</p><p>3.增加了友情链接页面。</p><p>4.增加了图片gallery。</p><h2 id="目前bug（2023-x2F-5-x2F-9）："><a href="#目前bug（2023-x2F-5-x2F-9）：" class="headerlink" title="目前bug（2023&#x2F;5&#x2F;9）："></a>目前bug（2023&#x2F;5&#x2F;9）：</h2><p>暂无。</p><h2 id="注意事项："><a href="#注意事项：" class="headerlink" title="注意事项："></a>注意事项：</h2><p>有时候进不了网站可能正在修bug，过段时间清理一下缓存就可以进来了，如果还进不去大概率是我还正在修bug。</p>]]></content>
      
      
      <categories>
          
          <category> blog更新日志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
            <tag> 日志 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>碧蓝档案壁纸</title>
      <link href="/2023/05/10/wallpaper/"/>
      <url>/2023/05/10/wallpaper/</url>
      
        <content type="html"><![CDATA[<h1 id="碧蓝档案壁纸分享"><a href="#碧蓝档案壁纸分享" class="headerlink" title="碧蓝档案壁纸分享"></a>碧蓝档案壁纸分享</h1><p><img src="https://bu.dusays.com/2023/05/10/645b298f3371d.png"></p><p><img src="https://bu.dusays.com/2023/05/10/645b298f3371d.jpg"></p><p><img src="https://bu.dusays.com/2023/05/10/645b298f6ac22.png"></p><p><img src="https://bu.dusays.com/2023/05/10/645b29909ad64.jpg"></p><p><img src="https://bu.dusays.com/2023/05/10/645b2990ae369.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 壁纸 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 壁纸 </tag>
            
            <tag> 碧蓝档案 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>blog更新工作进展(2023/5/9)</title>
      <link href="/2023/05/09/blog3/"/>
      <url>/2023/05/09/blog3/</url>
      
        <content type="html"><![CDATA[<p>本篇博客记录一下本站搭建工作以及后续更新。</p><h2 id="更新记录："><a href="#更新记录：" class="headerlink" title="更新记录："></a>更新记录：</h2><h3 id="2023-x2F-5-x2F-9："><a href="#2023-x2F-5-x2F-9：" class="headerlink" title="2023&#x2F;5&#x2F;9："></a>2023&#x2F;5&#x2F;9：</h3><p>1.新增了留言板功能。</p><p><img src="/img/1/07.png" alt="07"></p><p>2.添加了Waline评论系统。（不是）</p><p>（在尝试修复国内无法看到评论的bug后，我成功的把原来的waline整个东西搞没了，后续又折腾了好久没折腾回来）</p><p>然后我改用twikoo了，已正常使用。评论被回复后会有邮件提醒（推荐使用qq邮箱，可以获取qq头像）</p><h2 id="目前bug（2023-x2F-5-x2F-9）："><a href="#目前bug（2023-x2F-5-x2F-9）：" class="headerlink" title="目前bug（2023&#x2F;5&#x2F;9）："></a>目前bug（2023&#x2F;5&#x2F;9）：</h2><p>暂无。</p><h2 id="注意事项："><a href="#注意事项：" class="headerlink" title="注意事项："></a>注意事项：</h2><p>有时候进不了网站可能正在修bug，过段时间清理一下缓存就可以进来了，如果还进不去大概率是我还正在修bug。</p>]]></content>
      
      
      <categories>
          
          <category> blog更新日志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
            <tag> 日志 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实用资源分享(百度云)</title>
      <link href="/2023/05/08/ziyuan/"/>
      <url>/2023/05/08/ziyuan/</url>
      
        <content type="html"><![CDATA[<h2 id="资源分享："><a href="#资源分享：" class="headerlink" title="资源分享："></a>资源分享：</h2><h3 id="学习向："><a href="#学习向：" class="headerlink" title="学习向："></a>学习向：</h3><h4 id="stable-diffusion-Ai绘画整合包-本体＋启动器（搬运自b站秋叶大佬）："><a href="#stable-diffusion-Ai绘画整合包-本体＋启动器（搬运自b站秋叶大佬）：" class="headerlink" title="stable diffusion Ai绘画整合包 本体＋启动器（搬运自b站秋叶大佬）："></a>stable diffusion Ai绘画整合包 本体＋启动器（搬运自b站秋叶大佬）：</h4><p>链接：<a href="https://pan.baidu.com/s/1uFTOOSM4bgbM4pKuWypiMA?pwd=iwye">https://pan.baidu.com/s/1uFTOOSM4bgbM4pKuWypiMA?pwd=iwye</a><br>提取码：iwye </p><p>链接：<a href="https://pan.baidu.com/s/155E1lciEzsAy1qxeP202Ww?pwd=72ir">https://pan.baidu.com/s/155E1lciEzsAy1qxeP202Ww?pwd=72ir</a><br>提取码：72ir </p><h4 id="windows虚拟机（vmware-含破解工具）："><a href="#windows虚拟机（vmware-含破解工具）：" class="headerlink" title="windows虚拟机（vmware 含破解工具）："></a>windows虚拟机（vmware 含破解工具）：</h4><p>链接：<a href="https://pan.baidu.com/s/1qinNHNP6vMQmvMCgcML2mA?pwd=hzki">https://pan.baidu.com/s/1qinNHNP6vMQmvMCgcML2mA?pwd=hzki</a><br>提取码：hzki </p><h4 id="adobe全套工具（含ps，pr等等全家桶）："><a href="#adobe全套工具（含ps，pr等等全家桶）：" class="headerlink" title="adobe全套工具（含ps，pr等等全家桶）："></a>adobe全套工具（含ps，pr等等全家桶）：</h4><p>链接：<a href="https://pan.baidu.com/s/1dEFKg6QtHqb4MDCvVvA8VQ?pwd=olah">https://pan.baidu.com/s/1dEFKg6QtHqb4MDCvVvA8VQ?pwd=olah</a><br>提取码：olah </p><h3 id="娱乐向："><a href="#娱乐向：" class="headerlink" title="娱乐向："></a>娱乐向：</h3><h4 id="口袋妖怪究极绿宝石5-4："><a href="#口袋妖怪究极绿宝石5-4：" class="headerlink" title="口袋妖怪究极绿宝石5.4："></a>口袋妖怪究极绿宝石5.4：</h4><p>链接：<a href="https://pan.baidu.com/s/12nM4lRPTVcWt5KoOuiYZfQ?pwd=zuiz">https://pan.baidu.com/s/12nM4lRPTVcWt5KoOuiYZfQ?pwd=zuiz</a><br>提取码：zuiz </p><h4 id="心灵终结3-36："><a href="#心灵终结3-36：" class="headerlink" title="心灵终结3.36："></a>心灵终结3.36：</h4><p>链接：<a href="https://pan.baidu.com/s/1zL1hzm_qUDX8Xsmv0Q_LFg?pwd=87ma">https://pan.baidu.com/s/1zL1hzm_qUDX8Xsmv0Q_LFg?pwd=87ma</a><br>提取码：87ma </p><p>大部分3a游戏我都有资源，如死亡搁浅、地铁离去等等，这里因为不方便分享，如有需要可以联系我。（其实就是以前买过专门做破解版游戏网站的永久会员，游戏挺全的）</p><h2 id="注意事项："><a href="#注意事项：" class="headerlink" title="注意事项："></a>注意事项：</h2><p>资源均为百度云网盘，如果资源失效可以联系我补。</p>]]></content>
      
      
      <categories>
          
          <category> 杂项 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂项 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ai绘画 《无人之城与少女》</title>
      <link href="/2023/05/08/aihuihua/"/>
      <url>/2023/05/08/aihuihua/</url>
      
        <content type="html"><![CDATA[<h2 id="《无人之城与少女》"><a href="#《无人之城与少女》" class="headerlink" title="《无人之城与少女》"></a>《无人之城与少女》</h2><div align=center class="aspect-ratio"><iframe src="//player.bilibili.com/player.html?aid=226741779&bvid=BV1th411V7S9&cid=1072864481&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe></div>]]></content>
      
      
      <categories>
          
          <category> Ai人工智能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ai </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>blog更新工作进展(2023/5/8)</title>
      <link href="/2023/05/08/blog2/"/>
      <url>/2023/05/08/blog2/</url>
      
        <content type="html"><![CDATA[<p>本篇博客记录一下本站搭建工作以及后续更新。</p><h2 id="更新记录："><a href="#更新记录：" class="headerlink" title="更新记录："></a>更新记录：</h2><h3 id="2023-x2F-5-x2F-8："><a href="#2023-x2F-5-x2F-8：" class="headerlink" title="2023&#x2F;5&#x2F;8："></a>2023&#x2F;5&#x2F;8：</h3><p>1.搜索功能已修复，可以正常使用</p><p><img src="/img/1/04.png" alt="04"></p><p>2.增加了全程吸底的音乐播放器</p><p><img src="/img/1/05.png" alt="05"></p><p>3.适配了b站视频。</p><p>4.增加alice挂件(pc端才有)，alice女儿可爱捏。</p><p><img src="/img/1/06.png" alt="06"></p><h2 id="目前bug（2023-x2F-5-x2F-8）："><a href="#目前bug（2023-x2F-5-x2F-8）：" class="headerlink" title="目前bug（2023&#x2F;5&#x2F;8）："></a>目前bug（2023&#x2F;5&#x2F;8）：</h2><p>加载动画仍有问题，不打算用加载动画了。</p><h2 id="注意事项："><a href="#注意事项：" class="headerlink" title="注意事项："></a>注意事项：</h2><p>有时候进不了网站可能正在修bug，过段时间清理一下缓存就可以进来了，如果还进不去大概率是我还正在修bug。</p>]]></content>
      
      
      <categories>
          
          <category> blog更新日志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
            <tag> 日志 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>blog更新工作进展(2023/5/7)</title>
      <link href="/2023/05/07/blog/"/>
      <url>/2023/05/07/blog/</url>
      
        <content type="html"><![CDATA[<p>本篇博客记录一下本站搭建工作以及后续更新。</p><h2 id="更新记录："><a href="#更新记录：" class="headerlink" title="更新记录："></a>更新记录：</h2><h3 id="2023-x2F-5-x2F-7："><a href="#2023-x2F-5-x2F-7：" class="headerlink" title="2023&#x2F;5&#x2F;7："></a>2023&#x2F;5&#x2F;7：</h3><p>1.绑定个人域名beichengouo.top。</p><p>2.pc端网站背景增加动态彩带特效。</p><p>3.新增搜索功能：</p><p><img src="/img/1/04.png" alt="04"></p><p>4.调整了网页整体布局。</p><p>5.更新了相册。</p><p>6.增加了文章封面和tags，调整了文章顺序，增加了置顶文章。</p><h2 id="目前bug（2023-x2F-5-x2F-7）："><a href="#目前bug（2023-x2F-5-x2F-7）：" class="headerlink" title="目前bug（2023&#x2F;5&#x2F;7）："></a>目前bug（2023&#x2F;5&#x2F;7）：</h2><p>本地端搜索栏显示正常，部署到服务器上会显示在最底下，折腾了一下午暂时无法解决。大概率是github作为服务器加载外部网站上的js和css加载太慢了的问题。应该部署到自己服务器上不会出错。目前暂时把搜索和加载动画功能关闭了。</p><h2 id="注意事项："><a href="#注意事项：" class="headerlink" title="注意事项："></a>注意事项：</h2><p>有时候进不了网站可能正在修bug，过段时间清理一下缓存就可以进来了，如果还进不去大概率是我还正在修bug。</p>]]></content>
      
      
      <categories>
          
          <category> blog更新日志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
            <tag> 日志 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Qbot+gpt搭建</title>
      <link href="/2023/05/05/qbot/"/>
      <url>/2023/05/05/qbot/</url>
      
        <content type="html"><![CDATA[<p>本篇博客记录一下个人qbot搭建工作以及后续更新。qbot搭建具体步骤参考b站呆呆木的教程。在原版基础上做了很多更新，加了很多内容，机器人qq：2468138690（自动加好友），已部署在海外服务器上，秒回复，标注❤️的则为原版没有的内容。</p><h2 id="当前机器人功能游览"><a href="#当前机器人功能游览" class="headerlink" title="当前机器人功能游览"></a>当前机器人功能游览</h2><h3 id="管理员指令表："><a href="#管理员指令表：" class="headerlink" title="管理员指令表："></a>管理员指令表：</h3><p><img src="/img/1/01.png" alt="01"></p><h3 id="用户（非管理）指令："><a href="#用户（非管理）指令：" class="headerlink" title="用户（非管理）指令："></a>用户（非管理）指令：</h3><p><img src="/img/1/02.png" alt="02"></p><h3 id="指令功能介绍："><a href="#指令功能介绍：" class="headerlink" title="指令功能介绍："></a>指令功能介绍：</h3><p>重置会话：重置当前会话。</p><p>指令说明：回复指令说明大全，目前因账号被风控无法在qq群内回复指令大全，私聊正常。</p><p>设置人格：设置gpt初始人格。格式如 设置人格 xxxxxx（描述）</p><p>语音开启&#x2F;关闭：开启&#x2F;关闭语音回复。</p><p>拉黑&#x2F;解除：拉黑指定qq号直至解除或者服务器重启，拉黑后机器人将不会对指定qq进行回复。❤️</p><p>私人模式：开启后非管理无法与机器人对话。❤️</p><p>变xxx：切换对应预置人格。❤️</p><p>醒醒&#x2F;昏睡：醒醒后机器人会在群内随机回复群友的话，初始概率为1&#x2F;3，通过高冷一点&#x2F;呆萌一点命令可以调整回复概率，昏睡开启后机器人将不会随机回复。❤️</p><p>设备信息：显示服务器各参数详细信息。❤️</p><p>磁盘信息：显示服务器磁盘内存信息。❤️</p><p>拉黑检测：检测到指定敏感关键词将自动拉黑对方。❤️</p><p>初始自动检测：第一次对话将自动识别非管理和管理用户。用于加载不同初始设置（比如加载不同人格）。❤️</p><h2 id="最近更新："><a href="#最近更新：" class="headerlink" title="最近更新："></a>最近更新：</h2><h3 id="2023-x2F-5-x2F-1"><a href="#2023-x2F-5-x2F-1" class="headerlink" title="2023&#x2F;5&#x2F;1"></a>2023&#x2F;5&#x2F;1</h3><p>1.机器人新增了发表情的功能，每一次回复有1&#x2F;3概率在后面增加表情。❤️</p><p><img src="/img/1/03.png" alt="03"></p><p>2.修复了切换人格后第一句对话不理人的情况。</p><p>3.优化了回复概率问题。</p><p>4.优化了预置人格，在每句话前增加了时间（每句话都告诉gpt当前时间）。</p>]]></content>
      
      
      <categories>
          
          <category> Ai人工智能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ai </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/05/05/hello-world/"/>
      <url>/2023/05/05/hello-world/</url>
      
        <content type="html"><![CDATA[<p>本博客使用 <a href="https://hexo.io/">Hexo</a>制作! 这是我的第一篇文章. 查看 <a href="https://hexo.io/docs/">文档</a> 获得更多信息. 如果你在使用Hexo中遇到任何问题，你可以在 <a href="https://hexo.io/docs/troubleshooting.html">故障排除</a> 中找到答案， 或者你可以在 <a href="https://github.com/hexojs/hexo/issues">GitHub</a>上问我.</p><h2 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h2><h3 id="命令：Create-a-new-post"><a href="#命令：Create-a-new-post" class="headerlink" title="命令：Create a new post"></a>命令：Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>更多信息: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="命令：Run-server"><a href="#命令：Run-server" class="headerlink" title="命令：Run server"></a>命令：Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>更多信息: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="命令：Generate-static-files"><a href="#命令：Generate-static-files" class="headerlink" title="命令：Generate static files"></a>命令：Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>更多信息: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="命令：Deploy-to-remote-sites"><a href="#命令：Deploy-to-remote-sites" class="headerlink" title="命令：Deploy to remote sites"></a>命令：Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>更多信息: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> blog更新日志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
            <tag> 日志 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
